import{G as E,aD as n,ao as O,aE as $,aF as x}from"./C_jZrYmJ.js";import{u as C}from"./DjcKm_pF.js";function R(s,r,c){const[e={},u]=typeof r=="string"?[{},r]:[r,c],t=E(()=>n(s)),o=e.key||O([u,typeof t.value=="string"?t.value:"",...L(e)]);if(!o||typeof o!="string")throw new TypeError("[nuxt] [useFetch] key must be a string: "+o);if(!s)throw new Error("[nuxt] [useFetch] request is missing.");const i=o===u?"$f"+o:o;if(!e.baseURL&&typeof t.value=="string"&&t.value[0]==="/"&&t.value[1]==="/")throw new Error('[nuxt] [useFetch] the request URL must not start with "//".');const{server:y,lazy:d,default:b,transform:g,pick:w,watch:h,immediate:v,getCachedData:D,deep:_,dedupe:k,...F}=e,l=$({...x,...F,cache:typeof e.cache=="boolean"?void 0:e.cache}),T={server:y,lazy:d,default:b,transform:g,pick:w,immediate:v,getCachedData:D,deep:_,dedupe:k,watch:h===!1?[]:[l,t,...h||[]]};let a;return C(i,()=>{var m;(m=a==null?void 0:a.abort)==null||m.call(a),a=typeof AbortController<"u"?new AbortController:{};const p=n(e.timeout);let f;return p&&(f=setTimeout(()=>a.abort(),p),a.signal.onabort=()=>clearTimeout(f)),(e.$fetch||globalThis.$fetch)(t.value,{signal:a.signal,...l}).finally(()=>{clearTimeout(f)})},T)}function L(s){var c;const r=[((c=n(s.method))==null?void 0:c.toUpperCase())||"GET",n(s.baseURL)];for(const e of[s.params||s.query]){const u=n(e);if(!u)continue;const t={};for(const[o,i]of Object.entries(u))t[n(o)]=n(i);r.push(t)}return r}export{R as u};
