import{al as a}from"./DscwyYbq.js";const s=a({id:"gallery",state:()=>({galleries:JSON.parse(localStorage.getItem("galleries")||"[]"),currentGallery:JSON.parse(localStorage.getItem("currentGallery")||"null"),currentImage:localStorage.getItem("currentImage")||""}),getters:{currentGalleryContent(e){var r;return((r=e.currentGallery)==null?void 0:r.content)||null},currentGalleryDescription(){var e;return((e=this.currentGallery)==null?void 0:e.description)||null},currentGalleryMediaId(){var e;return((e=this.currentGallery)==null?void 0:e.mediaId)||null},currentGalleryURL(){var e;return((e=this.currentGallery)==null?void 0:e.url)||null},currentGalleryIsMature(){var e;return((e=this.currentGallery)==null?void 0:e.isMature)||!1},currentGalleryCustodian(){var e;return((e=this.currentGallery)==null?void 0:e.custodian)||null},currentGalleryUserId(){var e;return((e=this.currentGallery)==null?void 0:e.userId)||null},currentGalleryHighlightImage(){var e;return((e=this.currentGallery)==null?void 0:e.highlightImage)||null},allGalleryNames(){return this.galleries.map(e=>e.name)},randomImage(){if(this.currentGallery&&this.currentGallery.imagePaths){const e=this.currentGallery.imagePaths.split(","),r=Math.floor(Math.random()*e.length);return`/images/${this.currentGallery.name}/${e[r]}`}return null},randomGallery(e){const r=e.galleries.filter(l=>{var t;return l.name!==((t=e.currentGallery)==null?void 0:t.name)});return r[Math.floor(Math.random()*r.length)]||null},imagePathsByGalleryName(e){return r=>{const l=e.galleries.find(t=>t.name===r);return l&&l.imagePaths?l.imagePaths.split(","):[]}}},actions:{async fetchGalleries(){const e=await fetch("/api/galleries");e.ok&&(this.galleries=await e.json(),localStorage.setItem("galleries",JSON.stringify(this.galleries)))},setGalleryByName(e){var l;const r=this.galleries.find(t=>t.name===e);r&&(this.currentGallery=r,this.currentImage=((l=r.imagePaths)==null?void 0:l.split(",")[0])||"",localStorage.setItem("currentGallery",JSON.stringify(this.currentGallery)),localStorage.setItem("currentImage",this.currentImage))},changeToRandomImage(){if(this.currentGallery&&this.currentGallery.imagePaths){const e=this.currentGallery.imagePaths.split(",");let r=this.currentImage;for(;r===this.currentImage&&e.length>1;){const l=Math.floor(Math.random()*e.length);r=`/images/${this.currentGallery.name}/${e[l]}`}this.currentImage=r}},setRandomGallery(){const e=this.randomGallery;e&&this.setGalleryByName(e.name)}}});export{s as u};
