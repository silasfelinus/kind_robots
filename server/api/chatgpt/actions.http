@host = http://localhost:3000
@token = REPLACE_ME
@apikey = REPLACE_ME

### 0) ensure session with token (no auto-register)
POST {{host}}/api/chatgpt
content-type: application/json
authorization: Bearer {{token}}

{
  "action": "kr.ensure_session",
  "input": { "token": "{{token}}", "registerIfMissing": 0 }
}

### 1) ensure session with api key (guest-scoped unless your validator returns user)
POST {{host}}/api/chatgpt
content-type: application/json
x-api-key: {{apikey}}

{
  "action": "kr.ensure_session",
  "input": { "apiKey": "{{apikey}}", "registerIfMissing": 0 }
}

### 2) auto-register a user (no headers)
POST {{host}}/api/chatgpt
content-type: application/json

{
  "action": "kr.ensure_session",
  "input": {
    "registerIfMissing": 1,
    "registerPayload": {
      "username": "chatgpt_{{$timestamp}}",
      "password": "VeryStrongPassw0rd!",
      "email": "chatgpt{{$timestamp}}@example.com"
    }
  }
}

### 3) list objects (replace Scenario with your model)
POST {{host}}/api/chatgpt
content-type: application/json
authorization: Bearer {{token}}

{
  "action": "kr.list_objects",
  "input": { "model": "Scenario", "page": 1, "pageSize": 10 }
}

### 4) create object (writeable models only; adjust fields)
POST {{host}}/api/chatgpt
content-type: application/json
authorization: Bearer {{token}}

{
  "action": "kr.create_object",
  "input": { "model": "Scenario", "data": { "title": "From ChatGPT" } }
}

### 5) update object
POST {{host}}/api/chatgpt
content-type: application/json
authorization: Bearer {{token}}

{
  "action": "kr.update_object",
  "input": { "model": "Scenario", "id": 123, "data": { "title": "Edited by ChatGPT" } }
}

### 6) delete object
POST {{host}}/api/chatgpt
content-type: application/json
authorization: Bearer {{token}}

{
  "action": "kr.delete_object",
  "input": { "model": "Scenario", "id": 123 }
}

### 7) story start
POST {{host}}/api/chatgpt
content-type: application/json
authorization: Bearer {{token}}

{
  "action": "kr.story_start",
  "input": { "seed": "once upon a midnight dreary" }
}

### 8) story continue
POST {{host}}/api/chatgpt
content-type: application/json
authorization: Bearer {{token}}

{
  "action": "kr.story_continue",
  "input": { "sessionId": "story_1730000000000", "choice": "left path" }
}

### 9) bot chat
POST {{host}}/api/chatgpt
content-type: application/json
authorization: Bearer {{token}}

{
  "action": "kr.bot_chat",
  "input": { "botId": 1, "message": "Hello!" }
}