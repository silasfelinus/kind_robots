import P from"./rqtZmSiP.js";import{d as y,aL as w,$ as k,H as e,c as l,e as p,f as c,h as s,n as u,a1 as n}from"./CH0slHa8.js";const v={key:0,class:"flex space-x-4"},C={key:1},N=c("span",null,"Error: Pitch data not available.",-1),R=[N],B=y({__name:"PitchCardActions",props:{pitch:{}},setup(h){const t=h,o=w(),a=k(),d=e(()=>t.pitch?["rounded-full p-2",t.pitch.isMature?"bg-accent-dark":"bg-accent"]:"rounded-full p-2 bg-accent"),m=e(()=>t.pitch?["rounded-full p-2",t.pitch.isPublic?"bg-primary-dark":"bg-primary"]:"rounded-full p-2 bg-primary"),b=e(()=>{var r;return(r=t.pitch)!=null&&r.isMature?"fluent-emoji-high-contrast:lipstick":"ri:bear-smile-line"}),_=e(()=>{var r;return(r=t.pitch)!=null&&r.isPublic?"mdi:earth":"mdi:earth-off"}),g=async()=>{a.clearError();try{if(!t.pitch)throw new Error("Pitch data is not available.");await o.updatePitch(t.pitch.id,{isMature:!t.pitch.isMature})}catch(r){a.setError(n.UNKNOWN_ERROR,r.message),console.error("Error updating pitch:",r)}},f=async()=>{a.clearError();try{if(!t.pitch)throw new Error("Pitch data is not available.");await o.updatePitch(t.pitch.id,{isPublic:!t.pitch.isPublic})}catch(r){a.setError(n.UNKNOWN_ERROR,r.message),console.error("Error updating pitch:",r)}},E=async()=>{a.clearError();try{if(!t.pitch)throw new Error("Pitch data is not available.");await o.updatePitch(t.pitch.id,{claps:t.pitch.claps+1})}catch(r){a.setError(n.UNKNOWN_ERROR,r.message),console.error("Error updating pitch:",r)}};return(r,M)=>{const i=P;return t.pitch?(l(),p("div",v,[c("button",{class:u(d.value),"aria-label":"Toggle Mature Content",onClick:g},[s(i,{name:b.value,class:"w-6 h-6"},null,8,["name"])],2),c("button",{class:u(m.value),"aria-label":"Toggle Public Visibility",onClick:f},[s(i,{name:_.value,class:"w-6 h-6"},null,8,["name"])],2),c("button",{class:"bg-info hover:bg-info-dark rounded-full p-2","aria-label":"Add Clap",onClick:E},[s(i,{name:"mdi:hand",class:"w-6 h-6"})])])):(l(),p("div",C,R))}}});export{B as _};
