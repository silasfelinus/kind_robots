import E from"./Icon.bf1d9352.js";import{aH as U,d as C,G as w,r as $,W as P,o as A,b as d,c as y,e as a,D as z,g as k,O as n,f as g,t as m,Z as I,$ as R}from"./entry.5b5f4630.js";const V=U("spotify",{state:()=>({token:null,track:null,playbackStatus:null,playlist:[],history:[],error:null}),getters:{isPlaying(e){var t;return((t=e.playbackStatus)==null?void 0:t.isPlaying)||!1},currentTrack(e){return e.track},currentPlaylist(e){return e.playlist},trackHistory(e){return e.history}},actions:{setToken(e){this.token=e},async setVolume(e){try{if(!(await fetch(`https://api.spotify.com/v1/me/player/volume?volume_percent=${e}`,{method:"PUT",headers:{Authorization:`Bearer ${this.token}`,"Content-Type":"application/json"}})).ok)throw new Error("Failed to set volume")}catch(t){this.error=t.message}},async fetchSpotifyToken(){try{const e=await fetch("/api/utils/spotifyToken");if(!e.ok)throw new Error(`Failed to fetch Spotify token: ${e.statusText}`);const t=await e.json();if(t.token)this.token=t.token;else throw new Error("Token not received from the server.")}catch(e){console.error("Error fetching Spotify token",e),this.error=e.message||"Unknown error"}},generateCodeVerifier(){const e=new Uint32Array(28);return window.crypto.getRandomValues(e),Array.from(e,t=>("0"+t.toString(16)).substr(-2)).join("")},async authorizeSpotify(){const e=this.generateCodeVerifier();localStorage.setItem("spotify-code-verifier",e);const t=await this.generateCodeChallenge(e),c=encodeURIComponent("user-read-private user-read-email"),o="YOUR_SPOTIFY_CLIENT_ID",h=encodeURIComponent("YOUR_REDIRECT_URI");window.location.href=`https://accounts.spotify.com/authorize?client_id=${o}&response_type=code&redirect_uri=${h}&code_challenge_method=S256&code_challenge=${t}&scope=${c}`},generateCodeChallenge(e){return crypto.subtle.digest("SHA-256",new TextEncoder().encode(e)).then(t=>btoa(String.fromCharCode.apply(null,Array.from(new Uint8Array(t)))).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,""))},captureSpotifyTokenFromUrl(){const e=window.location.hash.substring(1).split("&").reduce((t,c)=>{const o=c.split("=");return t[o[0]]=decodeURIComponent(o[1]),t},{});window.location.hash="",e.access_token&&(this.token=e.access_token)},updateTrackId(e){this.track&&(this.track.id=e)},async fetchCurrentUserProfile(){if(!this.token){this.error="Authentication required.";return}try{const e=await fetch("https://api.spotify.com/v1/me",{headers:{Authorization:`Bearer ${this.token}`}});if(!e.ok)throw new Error("Failed to fetch user profile.");const t=await e.json()}catch(e){console.error("Error fetching user profile",e),this.error=e.message}},togglePlay(){this.playbackStatus&&(this.playbackStatus.isPlaying=!this.playbackStatus.isPlaying)},updatePlaybackStatus(e){this.playbackStatus=e},addToHistory(e){this.history.push(e)},async loadPlaylist(e){try{if(!this.token)throw new Error("Token is not available.");const t=await fetch(`https://api.spotify.com/v1/playlists/${e}`,{headers:{Authorization:`Bearer ${this.token}`}});if(!t.ok)throw new Error(`Failed to load playlist: ${t.statusText}`);const c=await t.json();this.playlist=c.tracks.items.map(o=>{var h,u,p,f;return{id:o.track.id,name:o.track.name,artist:((h=o.track.artists[0])==null?void 0:h.name)||"Unknown Artist",album:((u=o.track.album)==null?void 0:u.name)||"Unknown Album",release_date:((p=o.track.album)==null?void 0:p.release_date)||"Unknown Release Date",imageUrl:((f=o.track.album.images[0])==null?void 0:f.url)||""}})}catch(t){console.error("Error loading Spotify playlist",t),this.error=t.message||"Unknown error"}},async playTrack(e){try{if(!this.token)throw new Error("Token is not available.");const t=await fetch("https://api.spotify.com/v1/me/player/play",{method:"PUT",headers:{Authorization:`Bearer ${this.token}`,"Content-Type":"application/json"},body:JSON.stringify({uris:[`spotify:track:${e}`]})});if(!t.ok)throw new Error(`Failed to play the track: ${t.statusText}`)}catch(t){console.error("Error playing track",t),this.error=t.message||"Unknown error"}},async pauseTrack(){try{if(!this.token)throw new Error("Token is not available.");const e=await fetch("https://api.spotify.com/v1/me/player/pause",{method:"PUT",headers:{Authorization:`Bearer ${this.token}`}});if(!e.ok)throw new Error(`Failed to pause the track: ${e.statusText}`);this.playbackStatus&&(this.playbackStatus.isPlaying=!1)}catch(e){console.error("Error pausing track",e),this.error=e.message||"Unknown error"}},async nextTrack(){try{if(!this.token)throw new Error("Token is not available.");const e=await fetch("https://api.spotify.com/v1/me/player/next",{method:"POST",headers:{Authorization:`Bearer ${this.token}`}});if(!e.ok)throw new Error(`Failed to skip to the next track: ${e.statusText}`)}catch(e){console.error("Error skipping to the next track",e),this.error=e.message||"Unknown error"}},async previousTrack(){try{if(!this.token)throw new Error("Token is not available.");const e=await fetch("https://api.spotify.com/v1/me/player/previous",{method:"POST",headers:{Authorization:`Bearer ${this.token}`}});if(!e.ok)throw new Error(`Failed to play the previous track: ${e.statusText}`)}catch(e){console.error("Error playing the previous track",e),this.error=e.message||"Unknown error"}},setError(e){this.error=e},clearError(){this.error=null}}}),B={class:"bg-base-200 min-h-screen flex flex-col items-center py-8"},F={key:0,class:"mb-8"},D={key:1,class:"bg-secondary p-8 rounded shadow-lg w-1/3"},j={key:0,class:"flex items-center mb-4"},O=["src"],N={class:"text-accent font-semibold text-xl mb-1"},H={class:"text-base-100"},L={class:"flex justify-center space-x-4"},M={class:"mt-4 flex items-center"},Y={key:1,class:"mt-4"},q={class:"text-warning"},W=C({__name:"MusicToggle",setup(e){const t=V(),c=w(()=>t.token),o=w(()=>t.currentTrack),h=w(()=>t.isPlaying),u=w(()=>t.error),p=$(50),f=i=>{const r={year:"numeric",month:"short",day:"numeric"};return new Date(i).toLocaleDateString(void 0,r)},x=async i=>{try{await t.setVolume(i)}catch(r){console.error("Error setting volume",r)}};P(p,i=>{x(i)}),A(async()=>{const i=new URL(window.location.href).searchParams.get("code"),r=localStorage.getItem("spotify-code-verifier");if(i&&r)try{const s=await(await fetch(`/api/spotify-auth?code=${i}&verifier=${r}`)).json();t.setToken(s.access_token)}catch(l){console.error("Error fetching Spotify token",l)}});const{fetchSpotifyToken:v,togglePlay:b,nextTrack:_,previousTrack:T,clearError:S}=t;return(i,r)=>{const l=E;return d(),y("div",B,[c.value?g("",!0):(d(),y("div",F,[a("button",{class:"btn btn-primary",onClick:r[0]||(r[0]=(...s)=>n(v)&&n(v)(...s))},[z(" Login with Spotify "),k(l,{name:"mdi:spotify",class:"text-lg"})])])),c.value?(d(),y("div",D,[o.value?(d(),y("div",j,[a("img",{src:o.value.imageUrl,class:"w-16 h-16 rounded mr-4",alt:"Album Art"},null,8,O),a("div",null,[a("div",N,m(o.value.name),1),a("div",H,m(o.value.artist)+" - "+m(o.value.album)+" ( "+m(f(o.value.release_date))+") ",1)])])):g("",!0),a("div",L,[a("button",{class:"btn btn-accent",onClick:r[1]||(r[1]=(...s)=>n(T)&&n(T)(...s))},[k(l,{name:"mdi:skip-previous",class:"icon-size"})]),a("button",{class:"btn btn-accent",onClick:r[2]||(r[2]=(...s)=>n(b)&&n(b)(...s))},[k(l,{name:h.value?"mdi:pause":"mdi:play",class:"icon-size"},null,8,["name"])]),a("button",{class:"btn btn-accent",onClick:r[3]||(r[3]=(...s)=>n(_)&&n(_)(...s))},[k(l,{name:"mdi:skip-next",class:"icon-size"})])]),a("div",M,[k(l,{name:"mdi:volume-high",class:"text-lg mr-2"}),I(a("input",{"onUpdate:modelValue":r[4]||(r[4]=s=>p.value=s),type:"range",class:"w-full",min:"0",max:"100"},null,512),[[R,p.value]])]),u.value?(d(),y("div",Y,[a("div",q,m(u.value),1),a("button",{class:"btn btn-accent mt-2",onClick:r[5]||(r[5]=(...s)=>n(S)&&n(S)(...s))},"Clear Error")])):g("",!0)])):g("",!0)])}}});export{W as default};
