import S from"./CfoS5RXz.js";import O from"./vTN5214f.js";import{aO as R,Y as l,a2 as c,d as N,X as $,r as b,c as y,e as I,f,h as p,t as T,g as A}from"./7SNmuExf.js";import{u as k}from"./BSeaMF0Q.js";import"./O7piYCBW.js";import"./0Wtki7su.js";const B=R({id:"customer",state:()=>({customers:[],currentCustomer:null}),actions:{setCurrentCustomer(s){this.currentCustomer=s},clearCurrentCustomer(){this.currentCustomer=null},async fetchCustomerByUserId(s){const t=l();try{const e=await(await fetch(`/api/customers/userId/${s}.get.ts`)).json();return e.success?(this.setCurrentCustomer(e.customer),{success:!0,customerId:e.customer.id}):(t.setError(c.VALIDATION_ERROR,`Failed to fetch customer by userId: ${e.message}`),{success:!1,message:e.message})}catch(r){const e=r;return t.setError(c.NETWORK_ERROR,"Network error occurred while fetching customer by userId"),console.error(`Fetch Customer By UserId Error: ${e.message}`),{success:!1,message:e.message}}},async fetchCustomerByEmail(s){const t=l();try{const e=await(await fetch(`/api/customers/email/${s}.get.ts`)).json();if(e.success)this.setCurrentCustomer(e.customer);else throw t.setError(c.VALIDATION_ERROR,`Failed to fetch customer by email: ${e.message}`),new Error(e.message)}catch(r){const e=r;t.setError(c.NETWORK_ERROR,"Network error occurred while fetching customer by email"),console.error(`Fetch Customer By Email Error: ${e.message}`)}},async fetchAndSetCurrentCustomerById(s){const t=l();try{const r=await this.fetchCustomerById(s);r&&this.setCurrentCustomer(r)}catch(r){const e=r;t.setError(c.NETWORK_ERROR,"Network error occurred while fetching and setting customer by ID"),console.error(`Fetch And Set Current Customer By ID Error: ${e.message}`)}},setCustomers(s){this.customers=s},getCustomerById(s){return this.customers.find(t=>t.id===s)},async fetchCustomers(){const s=l();try{const r=await(await fetch("/api/customers/index.get.ts")).json();r.success?this.setCustomers(r.customers):(s.setError(c.VALIDATION_ERROR,`Failed to fetch customers: ${r.message}`),console.error(`Failed to fetch customers: ${r.message}`))}catch(t){const r=t;s.setError(c.NETWORK_ERROR,"Network error occurred while fetching customers"),console.error(`An error occurred while fetching customers: ${r.message}`)}},async fetchCustomerById(s){const t=l();try{return(await(await fetch(`/api/customers/${s}.get.ts`)).json()).customer}catch(r){const e=r;t.setError(c.NETWORK_ERROR,`Network error occurred while fetching customer by id: ${e.message}`),console.error(`An error occurred while fetching customer by id: ${e.message}`)}},async createCustomer(s){const t=l();try{const e=await(await fetch("/api/customers/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)})).json();return e.success?(this.customers.push(e.newCustomer),{success:!0,customerId:e.newCustomer.id}):(t.setError(c.VALIDATION_ERROR,`Failed to create customer: ${e.message}`),{success:!1,message:e.message})}catch(r){const e=r;return t.setError(c.NETWORK_ERROR,"Network error occurred while creating customer"),console.error(`Create Customer Error: ${e.message}`),{success:!1,message:e.message}}},async updateCustomer(s,t){const r=l();try{const a=await(await fetch(`/api/customers/${s}.patch.ts`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})).json();if(a.success){const h=this.customers.findIndex(g=>g.id===s);h!==-1&&(this.customers[h]={...this.customers[h],...t})}else r.setError(c.VALIDATION_ERROR,`Failed to update customer: ${a.message}`)}catch(e){const a=e;r.setError(c.NETWORK_ERROR,`Network error occurred while updating customer: ${a.message}`),console.error(`An error occurred while updating the customer: ${a.message}`)}},async deleteCustomer(s){const t=l();try{const e=await(await fetch(`/api/customers/${s}.delete.ts`,{method:"DELETE"})).json();if(e.success){const a=this.customers.findIndex(h=>h.id===s);a!==-1&&this.customers.splice(a,1)}else t.setError(c.VALIDATION_ERROR,`Failed to delete customer: ${e.message}`)}catch(r){const e=r;t.setError(c.NETWORK_ERROR,`Network error occurred while deleting customer: ${e.message}`),console.error(`An error occurred while deleting the customer: ${e.message}`)}}}}),E=["Adventurous","Bouncy","Curious","Dazzling","Eccentric","Fluffy","Graceful","Hilarious","Ingenious","Jolly","Kindhearted","Lively","Majestic","Nimble","Optimistic","Playful","Quirky","Radiant","Spirited","Tender","Unique","Vibrant","Whimsical","Xenodochial","Youthful","Zany"],C=["Albatross","Butterfly","Chameleon","Dolphin","Elephant","Flamingo","Giraffe","Hedgehog","Iguana","Jellyfish","Kangaroo","Lemur","Meerkat","Narwhal","Octopus","Panda","Quokka","Raccoon","Seahorse","Tiger","Uakari","Viper","Walrus","Xerus","Yak","Zebra"],_=["the Amiable","the Brilliant","the Courageous","the Daring","the Enigmatic","the Fearless","the Generous","the Humble","the Imaginative","the Joyful","the Kind","the Luminous","the Marvelous","the Noble","the Outstanding","the Persuasive","the Quixotic","the Resilient","the Serendipitous","the Tenacious","the Unstoppable","the Victorious","the Wise","the Xanthous","the Youthful","the Zealous"];function v(){const s=E[Math.floor(Math.random()*E.length)],t=C[Math.floor(Math.random()*C.length)],r=_[Math.floor(Math.random()*_.length)];return`${s} ${t} ${r}`}const D={class:"giftshop-container bg-base-200 rounded-2xl p-4 flex flex-col"},F=f("div",{class:"giftshop-header text-lg font-bold mb-4"}," Welcome to the Gift Shop! ",-1),j={class:"product-gallery mb-4"},V={key:0,class:"shopping-cart"},H=N({__name:"GiftShop",setup(s){const t=$(),r=k(),e=B(),a=b(!1),h=()=>{a.value=!a.value};return(async()=>{var d;try{if(t.userId===0){const o=await t.register({username:v()});if(o!=null&&o.success&&((d=o==null?void 0:o.user)!=null&&d.id)){const n=o.user.id,i=await e.createCustomer({userId:n});if(i!=null&&i.success&&(i!=null&&i.customerId)){const u=i.customerId,m=await r.createCart(u);if(m!=null&&m.success&&(m!=null&&m.cartId)){const w=m.cartId;localStorage.setItem("userId",n.toString()),localStorage.setItem("cartId",w.toString())}}}}else{const o=await e.fetchCustomerByUserId(t.userId);if(!(o!=null&&o.success)||!(o!=null&&o.customerId)){const n=await e.createCustomer({userId:t.userId});if(n!=null&&n.success&&(n!=null&&n.customerId)){const i=n.customerId,u=await r.createCart(i);if(u!=null&&u.success&&(u!=null&&u.cartId)){const m=u.cartId;localStorage.setItem("cartId",m.toString())}}}}}catch(o){console.error(`Initialization Error: ${o.message}`)}})(),(d,o)=>{const n=S,i=O;return y(),I("div",D,[F,f("div",j,[p(n)]),f("button",{class:"toggle-cart bg-primary text-lg px-2 py-1 rounded",onClick:h},T(a.value?"Hide Cart":"Show Cart"),1),a.value?(y(),I("div",V,[p(i)])):A("",!0)])}}});export{H as default};
