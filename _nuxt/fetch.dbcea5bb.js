import{G as $,O as o,am as x,ay as C,az as E}from"./entry.7ad367d0.js";import{u as O}from"./asyncData.e0a16a5e.js";function L(u,r,y){var h;const[t={},c]=typeof r=="string"?[{},r]:[r,y],e=$(()=>{let n=u;return typeof n=="function"&&(n=n()),o(n)}),s=t.key||x([c,((h=o(t.method))==null?void 0:h.toUpperCase())||"GET",o(t.baseURL),typeof e.value=="string"?e.value:"",o(t.params||t.query),o(t.headers)]);if(!s||typeof s!="string")throw new TypeError("[nuxt] [useFetch] key must be a string: "+s);if(!u)throw new Error("[nuxt] [useFetch] request is missing.");const l=s===c?"$f"+s:s;if(!t.baseURL&&typeof e.value=="string"&&e.value.startsWith("//"))throw new Error('[nuxt] [useFetch] the request URL must not start with "//".');const{server:m,lazy:d,default:v,transform:w,pick:g,watch:f,immediate:b,getCachedData:D,deep:_,...k}=t,i=C({...E,...k,cache:typeof t.cache=="boolean"?void 0:t.cache}),F={server:m,lazy:d,default:v,transform:w,pick:g,immediate:b,getCachedData:D,deep:_,watch:f===!1?[]:[i,e,...f||[]]};let a;return O(l,()=>{var p;return(p=a==null?void 0:a.abort)==null||p.call(a),a=typeof AbortController<"u"?new AbortController:{},typeof e.value=="string"&&e.value.startsWith("/"),(t.$fetch||globalThis.$fetch)(e.value,{signal:a.signal,...i})},F)}export{L as u};
