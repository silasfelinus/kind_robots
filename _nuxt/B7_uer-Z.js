import{aO as i,X as r,b0 as c,s,a1 as o}from"./Bh_OSRoe.js";import{u as S,S as n}from"./CMulBlru.js";const h=i({id:"content",state:()=>({page:{},pages:[]}),actions:{async loadStore(){const t=r(),e=S();e.setStatus(n.INFO,"Initializing content store..."),await t.handleError(async()=>{const a=await c();this.page=a.page,this.pages=await s().find(),e.setStatus(n.SUCCESS,"Content store initialized successfully"),e.clearStatus()},o.NETWORK_ERROR,"Failed to initialize content store")},async getPageByTitle(t){await r().handleError(async()=>{const a=await s().where({title:t}).findOne();this.page=a},o.NETWORK_ERROR,`Failed to get page by title: ${t}`)},async getPages(){await r().handleError(async()=>{const e=await s().where({$not:{_path:"/"}}).find();this.pages=e},o.NETWORK_ERROR,"Failed to fetch pages")},async getCurrentPage(t){await r().handleError(async()=>{const a=await s().where({_path:t}).findOne();this.page=a},o.NETWORK_ERROR,"Failed to fetch current page")},async refreshContent(){await r().handleError(async()=>{await this.loadStore()},o.NETWORK_ERROR,"Failed to refresh content")}}});export{h as u};
